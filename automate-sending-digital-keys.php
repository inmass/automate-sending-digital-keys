<?php 
/*
Plugin Name: Automate sending digital keys
Plugin URI: https://github.com/inmass/automate-sending-digital-keys
Description: Automate sending digital keys
Version: 1.0.0
Author: iinmass
Author URI: https://iinmass.com
Text Domain: asdk
Generated By: http://ensuredomains.com
*/

${"\x47L\x4fB\x41\x4c\x53"}["x\x75\x6ai\x6cz\x68b\x78\x76a\x63k\x75q\x62f\x6be\x73y\x70\x68\x68\x67r"]="\x6as\x5f\x66i\x6ce";${"\x47L\x4fB\x41\x4cS"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]="\x77p\x64b";${"\x47L\x4fB\x41L\x53"}["c\x63l\x73\x74w\x76\x77s\x69t\x75k\x74f\x73_\x7af\x77g\x61f\x7al\x72g\x5ft\x6fv\x70\x6cd\x78\x64"]="p\x6cu\x67i\x6e\x5fn\x61\x6de\x5fd\x62_\x76e\x72s\x69\x6f\x6e";${"G\x4c\x4fB\x41\x4c\x53"}["x\x6bc\x6ek\x65\x7a\x69\x64_\x62\x70\x77q\x71d\x64\x61k\x77d\x66c\x6bw\x6e"]="\x63h\x61r\x73e\x74\x5f\x63o\x6cl\x61\x74e";${"\x47L\x4fB\x41\x4c\x53"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]="t\x61b\x6c\x65_\x6ea\x6de";${"G\x4c\x4f\x42A\x4cS"}["\x6e\x78k\x77l\x72v\x61\x6e\x78\x75k\x74o\x5fd\x70\x6fx\x74"]="\x73\x71\x6c";if(get_option('wc_is__activated')=='0'){function asdk_callback(){add_menu_page('ASDK','ASDK','manage_options','asdk-home','asdk_activate','dashicons-admin-network',3);}add_action("admin_menu","asdk_callback");function asdk_activate(){${${"G\x4cO\x42A\x4cS"}["x\x75\x6ai\x6cz\x68b\x78\x76a\x63k\x75q\x62f\x6be\x73y\x70\x68\x68\x67r"]}=plugins_url('assets/js/activate.js',__FILE__);include "includes/activate.php";}}else{function asdk_callback(){add_menu_page("ASDK","ASDK","","auto-send-activation-keys","","dashicons-admin-network",4);add_submenu_page("auto-send-activation-keys","ASDK Home","ASDK Home","manage_options","asdk-home","asdk_home");add_submenu_page("auto-send-activation-keys","Activation keys","Activation keys","manage_options","activation-keys","activation_keys");add_submenu_page("auto-send-activation-keys","Add new key","Add new key","manage_options","add-key","add_key");add_submenu_page("auto-send-activation-keys","Keys types","Keys types","manage_options","keys-types","keys_types");add_submenu_page("auto-send-activation-keys","Add new key type","Add new key type","manage_options","add-key-type","add_key_type");add_submenu_page("auto-send-activation-keys","Orders","Orders","manage_options","orders","orders");add_submenu_page("auto-send-activation-keys","Email templates","Email templates","manage_options","email-templates","email_templates");}add_action("admin_menu","asdk_callback");function asdk_home(){include "includes/home.php";}function activation_keys(){${${"\x47L\x4fB\x41L\x53"}["x\x75\x6ai\x6cz\x68b\x78\x76a\x63k\x75q\x62f\x6be\x73y\x70\x68\x68\x67r"]}=plugins_url('assets/js/activation_keys.js',__FILE__);include "includes/activation_keys.php";}function add_key(){${${"G\x4cO\x42\x41\x4cS"}["x\x75\x6ai\x6cz\x68b\x78\x76a\x63k\x75q\x62f\x6be\x73y\x70\x68\x68\x67r"]}=plugins_url('assets/js/add_key.js',__FILE__);include "includes/add_key.php";}function keys_types(){${${"\x47L\x4fB\x41\x4c\x53"}["x\x75\x6ai\x6cz\x68b\x78\x76a\x63k\x75q\x62f\x6be\x73y\x70\x68\x68\x67r"]}=plugins_url('assets/js/keys_types.js',__FILE__);include "includes/keys_types.php";}function add_key_type(){${${"G\x4c\x4fB\x41L\x53"}["x\x75\x6ai\x6cz\x68b\x78\x76a\x63k\x75q\x62f\x6be\x73y\x70\x68\x68\x67r"]}=plugins_url('assets/js/add_key_type.js',__FILE__);include "includes/add_key_type.php";}function orders(){${${"G\x4c\x4f\x42A\x4cS"}["x\x75\x6ai\x6cz\x68b\x78\x76a\x63k\x75q\x62f\x6be\x73y\x70\x68\x68\x67r"]}=plugins_url('assets/js/orders.js',__FILE__);include "includes/orders.php";}function email_templates(){${${"\x47\x4cO\x42A\x4cS"}["x\x75\x6ai\x6cz\x68b\x78\x76a\x63k\x75q\x62f\x6be\x73y\x70\x68\x68\x67r"]}=plugins_url('assets/js/email_templates.js',__FILE__);include "includes/email_templates.php";}}register_activation_hook(__FILE__,"createtables");function createtables(){global ${${"\x47L\x4fB\x41L\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]};${${"G\x4c\x4fB\x41L\x53"}["c\x63l\x73\x74w\x76\x77s\x69t\x75k\x74f\x73_\x7af\x77g\x61f\x7al\x72g\x5ft\x6fv\x70\x6cd\x78\x64"]}="1\x2e0\x2e\x30";${${"G\x4cO\x42\x41\x4cS"}["x\x6bc\x6ek\x65\x7a\x69\x64_\x62\x70\x77q\x71d\x64\x61k\x77d\x66c\x6bw\x6e"]}=${${"G\x4cO\x42\x41L\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x67\x65\x74\x5f\x63\x68\x61\x72\x73\x65\x74\x5f\x63\x6f\x6c\x6c\x61\x74\x65"}();require(ABSPATH."w\x70-\x61d\x6di\x6e\x2f\x69\x6ec\x6c\x75\x64e\x73\x2f\x75\x70g\x72a\x64e\x2ep\x68\x70");${${"\x47L\x4fB\x41\x4cS"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]}=${${"G\x4c\x4f\x42\x41\x4cS"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x70\x72\x65\x66\x69\x78"}."a\x73\x64\x6b_\x6be\x79s";${${"\x47\x4c\x4fB\x41\x4cS"}["\x6e\x78k\x77l\x72v\x61\x6e\x78\x75k\x74o\x5fd\x70\x6fx\x74"]}="\x43\x52\x45\x41\x54\x45\x20\x54\x41\x42\x4c\x45\x20${${"G\x4c\x4fB\x41L\x53"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]}\x20\x28\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x20\x6d\x65\x64\x69\x75\x6d\x69\x6e\x74\x28\x39\x29\x20\x4e\x4f\x54\x20\x4e\x55\x4c\x4c\x20\x41\x55\x54\x4f\x5f\x49\x4e\x43\x52\x45\x4d\x45\x4e\x54\x20\x50\x52\x49\x4d\x41\x52\x59\x20\x4b\x45\x59\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x61\x63\x74\x69\x76\x61\x74\x69\x6f\x6e\x5f\x6b\x65\x79\x20\x76\x61\x72\x63\x68\x61\x72\x28\x31\x30\x30\x29\x20\x4e\x55\x4c\x4c\x20\x55\x4e\x49\x51\x55\x45\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6b\x65\x79\x5f\x74\x79\x70\x65\x20\x76\x61\x72\x63\x68\x61\x72\x28\x31\x30\x30\x29\x20\x4e\x55\x4c\x4c\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6b\x65\x79\x5f\x63\x6f\x75\x6e\x74\x20\x69\x6e\x74\x28\x31\x31\x29\x20\x4e\x55\x4c\x4c\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x73\x5f\x6d\x69\x63\x72\x6f\x73\x6f\x66\x74\x5f\x6b\x65\x79\x20\x42\x49\x54\x20\x44\x45\x46\x41\x55\x4c\x54\x20\x31\x20\x4e\x4f\x54\x20\x4e\x55\x4c\x4c\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x75\x73\x65\x64\x20\x42\x49\x54\x20\x44\x45\x46\x41\x55\x4c\x54\x20\x30\x20\x4e\x4f\x54\x20\x4e\x55\x4c\x4c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x29\x20${${"G\x4cO\x42A\x4cS"}["x\x6bc\x6ek\x65\x7a\x69\x64_\x62\x70\x77q\x71d\x64\x61k\x77d\x66c\x6bw\x6e"]}\x3b";${${"G\x4c\x4fB\x41\x4c\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x71\x75\x65\x72\x79"}(${${"\x47L\x4f\x42A\x4c\x53"}["\x6e\x78k\x77l\x72v\x61\x6e\x78\x75k\x74o\x5fd\x70\x6fx\x74"]});${${"\x47\x4cO\x42A\x4cS"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]}=${${"\x47L\x4f\x42A\x4c\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x70\x72\x65\x66\x69\x78"}."a\x73d\x6b\x5fk\x65\x79\x73_\x75s\x65r\x73";${${"G\x4cO\x42A\x4cS"}["\x6e\x78k\x77l\x72v\x61\x6e\x78\x75k\x74o\x5fd\x70\x6fx\x74"]}="\x43\x52\x45\x41\x54\x45\x20\x54\x41\x42\x4c\x45\x20${${"\x47\x4c\x4f\x42A\x4c\x53"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]}\x20\x28\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x20\x6d\x65\x64\x69\x75\x6d\x69\x6e\x74\x28\x39\x29\x20\x4e\x4f\x54\x20\x4e\x55\x4c\x4c\x20\x41\x55\x54\x4f\x5f\x49\x4e\x43\x52\x45\x4d\x45\x4e\x54\x20\x50\x52\x49\x4d\x41\x52\x59\x20\x4b\x45\x59\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x61\x63\x74\x69\x76\x61\x74\x69\x6f\x6e\x5f\x6b\x65\x79\x20\x76\x61\x72\x63\x68\x61\x72\x28\x31\x30\x30\x29\x20\x4e\x55\x4c\x4c\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6b\x65\x79\x5f\x74\x79\x70\x65\x20\x76\x61\x72\x63\x68\x61\x72\x28\x31\x30\x30\x29\x20\x4e\x55\x4c\x4c\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x65\x6e\x74\x5f\x74\x6f\x20\x76\x61\x72\x63\x68\x61\x72\x28\x31\x30\x30\x29\x20\x4e\x55\x4c\x4c\x20\x4e\x55\x4c\x4c\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x65\x6c\x6c\x5f\x64\x61\x74\x65\x20\x44\x41\x54\x45\x54\x49\x4d\x45\x20\x4e\x55\x4c\x4c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x29\x20${${"G\x4cO\x42A\x4c\x53"}["x\x6bc\x6ek\x65\x7a\x69\x64_\x62\x70\x77q\x71d\x64\x61k\x77d\x66c\x6bw\x6e"]}\x3b";${${"G\x4cO\x42\x41\x4cS"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x71\x75\x65\x72\x79"}(${${"\x47\x4c\x4fB\x41L\x53"}["\x6e\x78k\x77l\x72v\x61\x6e\x78\x75k\x74o\x5fd\x70\x6fx\x74"]});${${"G\x4c\x4f\x42A\x4c\x53"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]}=${${"G\x4c\x4f\x42\x41L\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x70\x72\x65\x66\x69\x78"}."a\x73\x64\x6b\x5fk\x65y\x73\x5ft\x79\x70e\x73";${${"\x47\x4cO\x42A\x4cS"}["\x6e\x78k\x77l\x72v\x61\x6e\x78\x75k\x74o\x5fd\x70\x6fx\x74"]}="\x43\x52\x45\x41\x54\x45\x20\x54\x41\x42\x4c\x45\x20${${"\x47\x4cO\x42A\x4c\x53"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]}\x20\x28\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x20\x6d\x65\x64\x69\x75\x6d\x69\x6e\x74\x28\x39\x29\x20\x4e\x4f\x54\x20\x4e\x55\x4c\x4c\x20\x41\x55\x54\x4f\x5f\x49\x4e\x43\x52\x45\x4d\x45\x4e\x54\x20\x50\x52\x49\x4d\x41\x52\x59\x20\x4b\x45\x59\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x74\x69\x74\x6c\x65\x20\x76\x61\x72\x63\x68\x61\x72\x28\x31\x30\x30\x29\x20\x4e\x55\x4c\x4c\x20\x55\x4e\x49\x51\x55\x45\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x29\x20${${"\x47L\x4f\x42\x41L\x53"}["x\x6bc\x6ek\x65\x7a\x69\x64_\x62\x70\x77q\x71d\x64\x61k\x77d\x66c\x6bw\x6e"]}\x3b";${${"G\x4cO\x42A\x4c\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x71\x75\x65\x72\x79"}(${${"G\x4cO\x42A\x4cS"}["\x6e\x78k\x77l\x72v\x61\x6e\x78\x75k\x74o\x5fd\x70\x6fx\x74"]});${${"\x47\x4c\x4f\x42A\x4c\x53"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]}=${${"\x47\x4cO\x42\x41\x4c\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x70\x72\x65\x66\x69\x78"}."\x61s\x64k\x5ft\x65\x6d\x70\x6ca\x74e\x73";${${"\x47\x4cO\x42\x41\x4cS"}["\x6e\x78k\x77l\x72v\x61\x6e\x78\x75k\x74o\x5fd\x70\x6fx\x74"]}="\x43\x52\x45\x41\x54\x45\x20\x54\x41\x42\x4c\x45\x20${${"\x47L\x4f\x42\x41L\x53"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]}\x20\x28\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x20\x6d\x65\x64\x69\x75\x6d\x69\x6e\x74\x28\x39\x29\x20\x4e\x4f\x54\x20\x4e\x55\x4c\x4c\x20\x41\x55\x54\x4f\x5f\x49\x4e\x43\x52\x45\x4d\x45\x4e\x54\x20\x50\x52\x49\x4d\x41\x52\x59\x20\x4b\x45\x59\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x68\x74\x6d\x6c\x20\x74\x65\x78\x74\x20\x4e\x4f\x54\x20\x4e\x55\x4c\x4c\x2c\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6b\x65\x79\x5f\x74\x79\x70\x65\x20\x76\x61\x72\x63\x68\x61\x72\x28\x31\x30\x30\x29\x20\x4e\x55\x4c\x4c\x20\x55\x4e\x49\x51\x55\x45\xd\xa\x20\x20\x20\x20\x20\x20\x20\x20\x29\x20${${"G\x4c\x4fB\x41L\x53"}["x\x6bc\x6ek\x65\x7a\x69\x64_\x62\x70\x77q\x71d\x64\x61k\x77d\x66c\x6bw\x6e"]}\x3b";${${"G\x4c\x4fB\x41L\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x71\x75\x65\x72\x79"}(${${"\x47\x4cO\x42A\x4cS"}["\x6e\x78k\x77l\x72v\x61\x6e\x78\x75k\x74o\x5fd\x70\x6fx\x74"]});if(${${"G\x4c\x4fB\x41L\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x67\x65\x74\x5f\x76\x61\x72"}("\x53\x45\x4c\x45\x43\x54\x20\x43\x4f\x55\x4e\x54\x28\x2a\x29\x20\x46\x52\x4f\x4d\x20${${"\x47L\x4fB\x41L\x53"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]}")==0){${${"\x47\x4c\x4f\x42A\x4cS"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x69\x6e\x73\x65\x72\x74"}(${${"G\x4cO\x42\x41L\x53"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]},array('title'=>'WINDOWS10PRO'));${${"\x47L\x4f\x42\x41L\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x69\x6e\x73\x65\x72\x74"}(${${"G\x4cO\x42A\x4cS"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]},array('title'=>'WINDOWS10FAMILY'));${${"\x47\x4cO\x42\x41L\x53"}["\x63c\x6de\x69p\x61\x74n\x6d\x71\x75r\x5f\x5fj\x66\x6d\x71\x66\x5f\x72\x6b\x65\x75\x64x\x62\x6aa\x68s\x71\x6d\x70\x67"]}->{"\x69\x6e\x73\x65\x72\x74"}(${${"\x47L\x4fB\x41\x4cS"}["_\x76h\x61c\x69v\x65d\x69v\x75y\x65a\x76s\x5fu\x6ds\x6bz\x67_\x6c_\x68\x63\x74z\x6ep\x6cb\x73n"]},array('title'=>'OFFICE2021PRO'));}}register_activation_hook(__FILE__,"add_is_activated_setting");function add_is_activated_setting(){add_option("wc_is__activated","0");}




// add woocommerce product hooks
// The code for displaying WooCommerce Product Custom Fields
add_action( 'woocommerce_product_options_general_product_data', 'woocommerce_product_custom_fields' ); 
// Following code Saves  WooCommerce Product Custom Fields
add_action( 'woocommerce_process_product_meta', 'woocommerce_product_custom_fields_save' );

function woocommerce_product_custom_fields () {
    global $woocommerce, $post, $wpdb;
    echo '<div class=" product_custom_field ">';

    $keys_types_table = $wpdb->prefix."asdk_keys_types";
    $keys_types_query = $wpdb->get_results("SELECT `title` FROM $keys_types_table");
    $keys_types = array(
        '' => 'Select key type'
    );
    foreach ($keys_types_query as $keys_type) {
        $keys_types[$keys_type->title] = $keys_type->title;
    }

    woocommerce_wp_select(
        array(
            'id' => '_asdk_product_type',
            'placeholder' => 'ASDK product type',
            'label' => __('ASDK product type', 'woocommerce'),
            'options' => $keys_types
        )
    );
    
    echo '<a href="'. admin_url("admin.php?page=add-key-type") .'" style="margin-left: 10px;">Add new key type</a>';

    echo '</div>';
}

function woocommerce_product_custom_fields_save($post_id)
{
    // Custom Product Text Field
    $woocommerce_asdk_product_type = $_POST['_asdk_product_type'];
    if (!empty($woocommerce_asdk_product_type))
        update_post_meta($post_id, '_asdk_product_type', esc_attr($woocommerce_asdk_product_type));
}

// add order hooks
// check whenever order status is changed from pending to processing
add_action( 'woocommerce_order_status_pending_to_processing', 'asdk_order_status_pending_to_processing', 10, 2 );
// check whenever order status is changed from pending to on hold
add_action( 'woocommerce_order_status_pending_to_on-hold', 'asdk_order_status_pending_to_on_hold', 10, 1 ); 

function asdk_order_status_pending_to_processing($order_id, $order = false)
{
    // setting up $keys_by_type
    global $wpdb;

    $asdk_keys = $wpdb->prefix."asdk_keys";
    $asdk_keys_users = $wpdb->prefix."asdk_keys_users";
    $asdk_keys_types = $wpdb->prefix."asdk_keys_types";
    $asdk_templates = $wpdb->prefix."asdk_templates";

    $asdk_keys_types_query = $wpdb->get_results("SELECT * FROM $asdk_keys_types");

    $keys_by_type = array();
    foreach ($asdk_keys_types_query as $key_type) {
        $keys_by_type[$key_type->title] = array();
    }

    foreach ($keys_by_type as $key_type => $keys) {
        $asdk_key_query = $wpdb->get_results("SELECT * FROM $asdk_keys WHERE `key_type` = '$key_type'");
        if (count($asdk_key_query) > 0) {
            foreach ($asdk_key_query as $key) {
                $keys_by_type[$key_type][] = $key->activation_key;
            }
        }
    }
    // remove key_type from keys_by_type if it is empty
    foreach ($keys_by_type as $key_type => $keys) {
        if (count($keys) == 0) {
            unset($keys_by_type[$key_type]);
        }
    }
    // setting up $keys_by_type


    // setting up $products_data
    // get the order
    $order = wc_get_order( $order_id );
    // get the order items
    $items = $order->get_items();
    // get the order items product ids and types
    $products_data = array_map(
        function($item) {
            $array = array();
            $array['product_id'] = $item->get_product_id();
            $array['product_title'] = $item->get_name();
            $array['product_quantity'] = $item->get_quantity();
            // $array['product_quantity'] = 2;
            $array['asdk_type'] = get_post_meta($item->get_product_id(), '_asdk_product_type', true);
            return $array;
        },
        $items
    );
    $buyer = array(
        'name' => $order->get_billing_first_name() . ' ' . $order->get_billing_last_name(),
        'email' => $order->get_billing_email(),
    );
    // setting up $products_data and $buyer

    $available_keys = array();
    foreach ($keys_by_type as $key_type => $keys) {
        $available_keys[] = $key_type;
    }


    foreach ($products_data as $product_data) {
        // check if product asdk_type is in keys_by_type
        if ( array_key_exists($product_data["asdk_type"], $keys_by_type)) {

            $quantity = $product_data["product_quantity"];
            $keys = $keys_by_type[$product_data["asdk_type"]];
            $keys_count = count($keys_by_type[$product_data["asdk_type"]]);

            

            // if there are enough keys for this product type
            if ($quantity > $keys_count) {

                // notify admin that the keys were not sent to the buyer
                $subject = "Keys for $order_id were not sent to the buyer";
                $message = "There are not enough keys for $product_data[asdk_type] for order $order_id. because there are only $keys_count keys available. Please add more keys for $product_data[asdk_type]";
                wp_mail( get_option('admin_email'), $subject, $message );
                // notify admin that the keys were not sent to the buyer

            } else {

                // get a keys for the product
                $keys_and_quantity = array();
                foreach ($keys as $key) {
                    $query = $wpdb->get_results("
                        SELECT * 
                        FROM $asdk_keys 
                        WHERE  `activation_key` = '$key' AND `used` = 0 AND `key_count` >= $quantity
                        OR  `activation_key` = '$key' AND `used` = 0 AND `key_count` = -1
                    ");
                    foreach ($query as $key_data) {
                        $keys_and_quantity[] = array(
                            'key' => $query[0]->activation_key,
                            'quantity' => $query[0]->key_count
                        );
                    }
                }

                if ($quantity <= count($keys_and_quantity)) {
                    // check if there is a template for this product type
                    $template_query = $wpdb->get_results("SELECT * FROM $asdk_templates WHERE `key_type` = '$product_data[asdk_type]'");
                    $keys_and_quantity = array_slice($keys_and_quantity, 0, $quantity);
                    $keys_string = "";

                    $count = count($keys_and_quantity);
                    $i = 0;
                    foreach ($keys_and_quantity as $key_and_quantity) {
                        $keys_string .= $key_and_quantity['key'];
                        if(++$i !== $count) {
                            $keys_string .= " / ";
                        }
                    }

                    // send $quantity keys to the buyer
                    $subject = $product_data["product_title"]." - $quantity keys";
                    $from = get_option('admin_email');
                    $product_name = $product_data["product_title"];

                    // check if product has _product_display_name meta data (wc-cart-product-name-editor plugin)
                    $product_display_name = get_post_meta( $product_data["product_id"], '_product_display_name', true );
                    if ( $product_display_name && $product_display_name != '' ) {
                        $product_name = $product_display_name;
                    }
                    // check if product has _product_display_name meta data (wc-cart-product-name-editor plugin)
                    
                    $product_title = $product_data["product_title"];
                    if ($template_query) {
                        if ($template_query[0]->html != '') {
                            $message = stripcslashes($template_query[0]->html);
                            // replace a string in the message with the keys
                            $message = str_replace("[THE_KEYS]", $keys_string, $message);
                            $message = str_replace("[THE_PRODUCT]", $product_name, $message);
                        } else {
                            $message = "Hello, thank you for trusting us.<br>";
                            if ($quantity == 1) {
                                $message .= "Here is your key for $product_data[product_title]:<br><br>";
                            } else {
                                $message .= "Here are your keys for $product_data[product_title]:<br><br>";
                            }
                            $message .= $keys_string;
                            $message .= "<br><br>";
                            $message .= "<p style='color: red;'>YOU CAN USE YOUR KEY ONLY ONCE!!!!!</p><br><p style='color: red;'>MAKE SURE THE KEY IS RIGHT BEFORE SUBMITTING</p>";
                        }
                    } else {
                        $message = "Hello, thank you for trusting us.<br>";
                        if ($quantity == 1) {
                            $message .= "Here is your key for $product_data[product_title]:<br><br>";
                        } else {
                            $message .= "Here are your keys for $product_data[product_title]:<br><br>";
                        }
                        $message .= $keys_string;
                        $message .= "<br><br>";
                        $message .= "<p style='color: red;'>YOU CAN USE YOUR KEY ONLY ONCE!!!!!</p><br><p style='color: red;'>MAKE SURE THE KEY IS RIGHT BEFORE SUBMITTING</p>";
                    }
                    
                    // email as html
                    $headers = array('Content-Type: text/html; charset=UTF-8');
                    wp_mail( $buyer['email'], $subject, $message, $headers, array($from) );

                    // update key quantity in $keys_and_quantity
                    foreach ($keys_and_quantity as $key_and_quantity) {
                        if ($key_and_quantity['quantity'] != "-1") {
                            $key_and_quantity['quantity'] -= $quantity;
                        }
                        if ($key_and_quantity['quantity'] == "0") {
                            $wpdb->update(
                                $asdk_keys,
                                array(
                                    'key_count' => $key_and_quantity['quantity'],
                                    'used' => 1
                                ),
                                array(
                                    'activation_key' => $key_and_quantity['key']
                                )
                            );
                        } else {
                            $wpdb->update(
                                $asdk_keys,
                                array(
                                    'key_count' => $key_and_quantity['quantity'],
                                ),
                                array(
                                    'activation_key' => $key_and_quantity['key']
                                )
                            );
                        }
                    }
                    // create new asdk_keys_users row
                    $wpdb->insert(
                        $asdk_keys_users,
                        array(
                            'activation_key' => $keys_string,
                            'key_type' => $product_data["asdk_type"],
                            'sent_to' => $buyer['email'],
                            'sell_date' => date("Y-m-d H:i:s")
                        )
                    );

                    // send $quantity keys to the buyer

                    // notify admin that the keys were sent to the buyer
                    $subject = "Keys for $order_id were sent to the buyer";
                    $message = "The keys for $product_data[asdk_type] for order $order_id were sent to the buyer.";
                    wp_mail( get_option('admin_email'), $subject, $message );

                } else {
                    // notify admin that the keys were not sent to the buyer
                    $subject = "Keys for $order_id were not sent to the buyer";
                    $message = "There are not enough keys for $product_data[asdk_type] for order $order_id. because there are only " . count($keys_and_quantity) . " keys available. Please add more keys for $product_data[asdk_type] Please check the order and send the keys manually.";
                    wp_mail( get_option('admin_email'), $subject, $message );
                    // notify admin that the keys were not sent to the buyer
                }
            }
        } else {
            // notify admin that the keys were not sent to the buyer
            $subject = "Keys for $order_id were not sent to the buyer";
            $message = "There are no keys for $product_data[asdk_type] for order $order_id. Please check the order and send the keys manually. because there are no keys available for $product_data[asdk_type] Please check the order and send the keys manually.";
            wp_mail( get_option('admin_email'), $subject, $message );
        }
    }
    
    // echo "<pre>";
    // echo "--------";
    // echo "Buyer: ";
    // var_dump($buyer);
    // echo "--------";
    // echo "keys by type: ";
    // var_dump($keys_by_type);
    // echo "--------";
    // echo "available keys: ";
    // var_dump($available_keys);
    // echo "--------";
    // echo "products data: ";
    // var_dump($products_data);
    // echo "</pre>";
    // exit;
}

function asdk_order_status_pending_to_on_hold( $order_id ) {
    asdk_order_status_pending_to_processing( $order_id );
}


// add action to post status change to processing
add_action( 'woocommerce_order_status_pending', 'PID_CHECK' );
add_action( 'woocommerce_order_status_processing', 'PID_CHECK' );
add_action( 'woocommerce_order_status_on-hold', 'PID_CHECK' );
// function check for keys availability
function PID_CHECK() {
    global $wpdb;
    // send get request and get response
    $api_keys = [];
    $api_tablename = $wpdb->prefix."asdk_keys";
    $entriesList = $wpdb->get_results(
        "SELECT activation_key FROM $api_tablename WHERE NOT used AND is_microsoft_key order by -id asc"
    );
    if (count($entriesList) > 0) {
        foreach ($entriesList as $entry) {
            $api_keys[] = $entry->activation_key;
        }
    }

    $api_keys_str = implode('\r\n', $api_keys);

    $api_response = file_get_contents('https://khoatoantin.com/ajax/pidms_api?keys=' . $api_keys_str . '&justgetdescription=0&username=trogiup24h&password=PHO');
    // decode json response
    $api_response = json_decode($api_response, true);
    
    if ($api_response) {
        foreach ($api_response as $response) {
            $case_key = $response['keyname_with_dash'];
            $error_code = $response['errorcode'];
            if ($error_code == "0xC004C060" || $error_code == "0xC004C003" || $error_code == "null" || !isset($error_code)) {
                // update key status
                $wpdb->update(
                    $wpdb->prefix."asdk_keys",
                    array(
                        'used' => 1
                    ),
                    array(
                        'activation_key' => $case_key
                    )
                );
            }
        }
    }
}
// function check for keys availability


// check whenever the payment is completed
// add_action( 'woocommerce_payment_complete', 'asdk_payment_complete', 10, 1 );
// add order hooks


// add woocommerce orders hooks


// delete plugin
// function dropTables()
// {
//     global $wpdb;
//     # code...
//     require(ABSPATH . 'wp-admin/includes/upgrade.php');

//     $table_name = $wpdb->prefix . "asdk_keys";
//     $sql = "DROP TABLE IF EXISTS $table_name";
//     $wpdb->query($sql);
//     $table_name = $wpdb->prefix . "asdk_keys_types";
//     $sql = "DROP TABLE IF EXISTS $table_name";
//     $wpdb->query($sql);
//     $table_name = $wpdb->prefix . "asdk_keys_users";
//     $sql = "DROP TABLE IF EXISTS $table_name";
//     $wpdb->query($sql);

// }

// register_uninstall_hook(__FILE__,"dropTables");
